{"version":3,"sources":["node_modules/sammy/lib/plugins/sammy.mustache.js"],"names":[],"mappingsfile":"sammy.mustache.ed08e2c8.js","sourceRoot":"..","sourcesContent":["(function (factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['jquery', 'sammy', 'mustache'], factory);\n  } else {\n    (window.Sammy = window.Sammy || {}).Mustache = factory(window.jQuery, window.Sammy, window.Mustache);\n  }\n}(function ($, Sammy, Mustache) {\n\n  // <tt>Sammy.Mustache</tt> provides a quick way of using mustache style templates in your app.\n  // The plugin wraps the awesome mustache.js lib created and maintained by Jan Lehnardt\n  // at http://github.com/janl/mustache.js\n  //\n  // Note: As of Sammy 0.7 the Mustache lib is not included in the templates source. Please download\n  // mustache.js and include it before Sammy.Mustache.\n  //\n  // Mustache is a clever templating system that relys on double brackets {{}} for interpolation.\n  // For full details on syntax check out the original Ruby implementation created by Chris Wanstrath at\n  // http://github.com/defunkt/mustache\n  //\n  // By default using Sammy.Mustache in your app adds the <tt>mustache()</tt> method to the EventContext\n  // prototype. However, just like <tt>Sammy.Template</tt> you can change the default name of the method\n  // by passing a second argument (e.g. you could use the ms() as the method alias so that all the template\n  // files could be in the form file.ms instead of file.mustache)\n  //\n  // ### Example #1\n  //\n  // The template (mytemplate.ms):\n  //\n  //       <h1>{{title}}<h1>\n  //\n  //       Hey, {{name}}! Welcome to Mustache!\n  //\n  // The app:\n  //\n  //       var app = $.sammy(function() {\n  //         // include the plugin and alias mustache() to ms()\n  //         this.use('Mustache', 'ms');\n  //\n  //         this.get('#/hello/:name', function() {\n  //           // set local vars\n  //           this.title = 'Hello!'\n  //           this.name = this.params.name;\n  //           // render the template and pass it through mustache\n  //           this.partial('mytemplate.ms');\n  //         });\n  //       });\n  //\n  //       $(function() {\n  //         app.run()\n  //       });\n  //\n  // If I go to #/hello/AQ in the browser, Sammy will render this to the <tt>body</tt>:\n  //\n  //       <h1>Hello!</h1>\n  //\n  //       Hey, AQ! Welcome to Mustache!\n  //\n  //\n  // ### Example #2 - Mustache partials\n  //\n  // The template (mytemplate.ms)\n  //\n  //       Hey, {{name}}! {{>hello_friend}}\n  //\n  //\n  // The partial (mypartial.ms)\n  //\n  //       Say hello to your friend {{friend}}!\n  //\n  // The app:\n  //\n  //       var app = $.sammy(function() {\n  //         // include the plugin and alias mustache() to ms()\n  //         this.use('Mustache', 'ms');\n  //\n  //         this.get('#/hello/:name/to/:friend', function(context) {\n  //           // fetch mustache-partial first\n  //           this.load('mypartial.ms')\n  //               .then(function(partial) {\n  //                 // set local vars\n  //                 context.partials = {hello_friend: partial};\n  //                 context.name = context.params.name;\n  //                 context.friend = context.params.friend;\n  //\n  //                 // render the template and pass it through mustache\n  //                 context.partial('mytemplate.ms');\n  //               });\n  //         });\n  //       });\n  //\n  //       $(function() {\n  //         app.run()\n  //       });\n  //\n  // If I go to #/hello/AQ/to/dP in the browser, Sammy will render this to the <tt>body</tt>:\n  //\n  //       Hey, AQ! Say hello to your friend dP!\n  //\n  // Note: You need to include the mustache.js file before this plugin.\n  //\n  Sammy.Mustache = function(app, method_alias) {\n\n    // *Helper* Uses Mustache.js to parse a template and interpolate and work with the passed data\n    //\n    // ### Arguments\n    //\n    // * `template` A String template. {{}} Tags are evaluated and interpolated by Mustache.js\n    // * `data` An Object containing the replacement values for the template.\n    //   data is extended with the <tt>EventContext</tt> allowing you to call its methods within the template.\n    // * `partials` An Object containing one or more partials (String templates\n    //   that are called from the main template).\n    //\n    var mustache = function(template, data, partials) {\n      data     = $.extend({}, this, data);\n      partials = $.extend({}, data.partials, partials);\n      return Mustache.to_html(template, data, partials);\n    };\n\n    // set the default method name/extension\n    if (!method_alias) { method_alias = 'mustache'; }\n    app.helper(method_alias, mustache);\n  };\n\n  return Sammy.Mustache;\n\n}));\n"]}